"use client";
import React, { useState, useEffect } from "react";
import axios from "axios";
import Image from "next/image";

interface Project {
  _id: string;
  category: string;
  photo: string;
}

const Projects = () => {
  const [projects, setProjects] = useState<Project[]>([]);
  const [selectedCategory, setSelectedCategory] = useState<string>("");
  const [filteredProjects, setFilteredProjects] = useState<Project[]>([]);

  useEffect(() => {
    const fetchProjects = async () => {
      try {
        const response = await axios.get<Project[]>(
          "https://admin.imaratgroup.uz/api/projects"
        ); // Replace with your API endpoint
        setProjects(response.data);
      } catch (error) {
        console.error("Error fetching projects:", error);
      }
    };

    fetchProjects();
  }, []);

  // Filter projects based on the selected category
  useEffect(() => {
    if (selectedCategory) {
      const filtered = projects.filter(
        (project) => project.category === selectedCategory
      );
      setFilteredProjects(filtered);
    } else {
      setFilteredProjects(projects); // If no category selected, show all projects
    }
  }, [selectedCategory, projects]);

  const handleCategoryClick = (category: string) => {
    setSelectedCategory(category);
  };

  return (
    <div className="projects">
      <div className="title">
        <span className="title__left"></span>
        <h2 className="title__content">Projects</h2>
        <span className="title__right"></span>
      </div>
      <div className="buttons">
        <button
          className={selectedCategory === "Bedroom" ? "active" : ""}
          onClick={() => handleCategoryClick("Bedroom")}
        >
          <p>Bedroom</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M20.0773 9.22231L11.2773 0.422308C11.0698 0.221934 10.792 0.111061 10.5036 0.113567C10.2152 0.116073 9.93926 0.231759 9.73531 0.435708C9.53136 0.639657 9.41568 0.91555 9.41317 1.20397C9.41066 1.49238 9.52154 1.77025 9.72191 1.97771L16.6442 8.90001L1.69961 8.90001C1.40787 8.90001 1.12808 9.0159 0.921792 9.22219C0.715502 9.42848 0.599609 9.70827 0.599609 10C0.599609 10.2917 0.715502 10.5715 0.921792 10.7778C1.12808 10.9841 1.40787 11.1 1.69961 11.1L16.6442 11.1L9.72191 18.0223C9.61685 18.1238 9.53305 18.2452 9.4754 18.3794C9.41775 18.5136 9.3874 18.6579 9.38613 18.804C9.38487 18.95 9.4127 19.0949 9.46801 19.2301C9.52332 19.3652 9.60499 19.4881 9.70828 19.5913C9.81156 19.6946 9.93437 19.7763 10.0696 19.8316C10.2047 19.8869 10.3496 19.9148 10.4957 19.9135C10.6417 19.9122 10.7861 19.8819 10.9203 19.8242C11.0545 19.7666 11.1758 19.6828 11.2773 19.5777L20.0773 10.7777C20.2835 10.5714 20.3994 10.2917 20.3994 10C20.3994 9.70833 20.2835 9.42859 20.0773 9.22231Z"
              fill="white"
            />
          </svg>
        </button>
        <button
          className={selectedCategory === "Kitchen" ? "active" : ""}
          onClick={() => handleCategoryClick("Kitchen")}
        >
          <p>Kitchen</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M20.0773 9.22231L11.2773 0.422308C11.0698 0.221934 10.792 0.111061 10.5036 0.113567C10.2152 0.116073 9.93926 0.231759 9.73531 0.435708C9.53136 0.639657 9.41568 0.91555 9.41317 1.20397C9.41066 1.49238 9.52154 1.77025 9.72191 1.97771L16.6442 8.90001L1.69961 8.90001C1.40787 8.90001 1.12808 9.0159 0.921792 9.22219C0.715502 9.42848 0.599609 9.70827 0.599609 10C0.599609 10.2917 0.715502 10.5715 0.921792 10.7778C1.12808 10.9841 1.40787 11.1 1.69961 11.1L16.6442 11.1L9.72191 18.0223C9.61685 18.1238 9.53305 18.2452 9.4754 18.3794C9.41775 18.5136 9.3874 18.6579 9.38613 18.804C9.38487 18.95 9.4127 19.0949 9.46801 19.2301C9.52332 19.3652 9.60499 19.4881 9.70828 19.5913C9.81156 19.6946 9.93437 19.7763 10.0696 19.8316C10.2047 19.8869 10.3496 19.9148 10.4957 19.9135C10.6417 19.9122 10.7861 19.8819 10.9203 19.8242C11.0545 19.7666 11.1758 19.6828 11.2773 19.5777L20.0773 10.7777C20.2835 10.5714 20.3994 10.2917 20.3994 10C20.3994 9.70833 20.2835 9.42859 20.0773 9.22231Z"
              fill="white"
            />
          </svg>
        </button>
        <button
          className={selectedCategory === "Home office" ? "active" : ""}
          onClick={() => handleCategoryClick("Home office")}
        >
          <p>Home office</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M20.0773 9.22231L11.2773 0.422308C11.0698 0.221934 10.792 0.111061 10.5036 0.113567C10.2152 0.116073 9.93926 0.231759 9.73531 0.435708C9.53136 0.639657 9.41568 0.91555 9.41317 1.20397C9.41066 1.49238 9.52154 1.77025 9.72191 1.97771L16.6442 8.90001L1.69961 8.90001C1.40787 8.90001 1.12808 9.0159 0.921792 9.22219C0.715502 9.42848 0.599609 9.70827 0.599609 10C0.599609 10.2917 0.715502 10.5715 0.921792 10.7778C1.12808 10.9841 1.40787 11.1 1.69961 11.1L16.6442 11.1L9.72191 18.0223C9.61685 18.1238 9.53305 18.2452 9.4754 18.3794C9.41775 18.5136 9.3874 18.6579 9.38613 18.804C9.38487 18.95 9.4127 19.0949 9.46801 19.2301C9.52332 19.3652 9.60499 19.4881 9.70828 19.5913C9.81156 19.6946 9.93437 19.7763 10.0696 19.8316C10.2047 19.8869 10.3496 19.9148 10.4957 19.9135C10.6417 19.9122 10.7861 19.8819 10.9203 19.8242C11.0545 19.7666 11.1758 19.6828 11.2773 19.5777L20.0773 10.7777C20.2835 10.5714 20.3994 10.2917 20.3994 10C20.3994 9.70833 20.2835 9.42859 20.0773 9.22231Z"
              fill="white"
            />
          </svg>
        </button>
        <button
          className={selectedCategory === "Living room" ? "active" : ""}
          onClick={() => handleCategoryClick("Living room")}
        >
          <p>Living room</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M20.0773 9.22231L11.2773 0.422308C11.0698 0.221934 10.792 0.111061 10.5036 0.113567C10.2152 0.116073 9.93926 0.231759 9.73531 0.435708C9.53136 0.639657 9.41568 0.91555 9.41317 1.20397C9.41066 1.49238 9.52154 1.77025 9.72191 1.97771L16.6442 8.90001L1.69961 8.90001C1.40787 8.90001 1.12808 9.0159 0.921792 9.22219C0.715502 9.42848 0.599609 9.70827 0.599609 10C0.599609 10.2917 0.715502 10.5715 0.921792 10.7778C1.12808 10.9841 1.40787 11.1 1.69961 11.1L16.6442 11.1L9.72191 18.0223C9.61685 18.1238 9.53305 18.2452 9.4754 18.3794C9.41775 18.5136 9.3874 18.6579 9.38613 18.804C9.38487 18.95 9.4127 19.0949 9.46801 19.2301C9.52332 19.3652 9.60499 19.4881 9.70828 19.5913C9.81156 19.6946 9.93437 19.7763 10.0696 19.8316C10.2047 19.8869 10.3496 19.9148 10.4957 19.9135C10.6417 19.9122 10.7861 19.8819 10.9203 19.8242C11.0545 19.7666 11.1758 19.6828 11.2773 19.5777L20.0773 10.7777C20.2835 10.5714 20.3994 10.2917 20.3994 10C20.3994 9.70833 20.2835 9.42859 20.0773 9.22231Z"
              fill="white"
            />
          </svg>
        </button>
        <button
          className={selectedCategory === "Dining Room" ? "active" : ""}
          onClick={() => handleCategoryClick("Dining Room")}
        >
          <p>Dining room</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M20.0773 9.22231L11.2773 0.422308C11.0698 0.221934 10.792 0.111061 10.5036 0.113567C10.2152 0.116073 9.93926 0.231759 9.73531 0.435708C9.53136 0.639657 9.41568 0.91555 9.41317 1.20397C9.41066 1.49238 9.52154 1.77025 9.72191 1.97771L16.6442 8.90001L1.69961 8.90001C1.40787 8.90001 1.12808 9.0159 0.921792 9.22219C0.715502 9.42848 0.599609 9.70827 0.599609 10C0.599609 10.2917 0.715502 10.5715 0.921792 10.7778C1.12808 10.9841 1.40787 11.1 1.69961 11.1L16.6442 11.1L9.72191 18.0223C9.61685 18.1238 9.53305 18.2452 9.4754 18.3794C9.41775 18.5136 9.3874 18.6579 9.38613 18.804C9.38487 18.95 9.4127 19.0949 9.46801 19.2301C9.52332 19.3652 9.60499 19.4881 9.70828 19.5913C9.81156 19.6946 9.93437 19.7763 10.0696 19.8316C10.2047 19.8869 10.3496 19.9148 10.4957 19.9135C10.6417 19.9122 10.7861 19.8819 10.9203 19.8242C11.0545 19.7666 11.1758 19.6828 11.2773 19.5777L20.0773 10.7777C20.2835 10.5714 20.3994 10.2917 20.3994 10C20.3994 9.70833 20.2835 9.42859 20.0773 9.22231Z"
              fill="white"
            />
          </svg>
        </button>
        <button
          className={selectedCategory === "Bathroom" ? "active" : ""}
          onClick={() => handleCategoryClick("Bathroom")}
        >
          <p>Bathroom</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M20.0773 9.22231L11.2773 0.422308C11.0698 0.221934 10.792 0.111061 10.5036 0.113567C10.2152 0.116073 9.93926 0.231759 9.73531 0.435708C9.53136 0.639657 9.41568 0.91555 9.41317 1.20397C9.41066 1.49238 9.52154 1.77025 9.72191 1.97771L16.6442 8.90001L1.69961 8.90001C1.40787 8.90001 1.12808 9.0159 0.921792 9.22219C0.715502 9.42848 0.599609 9.70827 0.599609 10C0.599609 10.2917 0.715502 10.5715 0.921792 10.7778C1.12808 10.9841 1.40787 11.1 1.69961 11.1L16.6442 11.1L9.72191 18.0223C9.61685 18.1238 9.53305 18.2452 9.4754 18.3794C9.41775 18.5136 9.3874 18.6579 9.38613 18.804C9.38487 18.95 9.4127 19.0949 9.46801 19.2301C9.52332 19.3652 9.60499 19.4881 9.70828 19.5913C9.81156 19.6946 9.93437 19.7763 10.0696 19.8316C10.2047 19.8869 10.3496 19.9148 10.4957 19.9135C10.6417 19.9122 10.7861 19.8819 10.9203 19.8242C11.0545 19.7666 11.1758 19.6828 11.2773 19.5777L20.0773 10.7777C20.2835 10.5714 20.3994 10.2917 20.3994 10C20.3994 9.70833 20.2835 9.42859 20.0773 9.22231Z"
              fill="white"
            />
          </svg>
        </button>
      </div>
      <div>
        <h2>
          {selectedCategory ? `${selectedCategory} images` : "All Images"}
        </h2>
        <div>
          {filteredProjects.map((project, index) => (
            <Image
              alt="project image"
              width={400}
              height={400}
              src={`https://admin.imaratgroup.uz/${project.photo}`}
              key={index}
            />
          ))}
        </div>
      </div>
    </div>
  );
};

export default Projects;
